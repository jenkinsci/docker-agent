# escape=`

# The MIT License
#
#  Copyright (c) 2019, Alex Earl and other Jenkins Contributors
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

ARG WINDOWS_DOCKER_TAG=10.0.14393.1770
ARG JAVA_VERSION=1.8.0.212-1
ARG JAVA_BASE_VERSION=1.8.0
ARG JAVA_ZIP_VERSION=1.8.0-openjdk-${JAVA_VERSION}.b04
ARG JAVA_SHA256=a40d7ab150bb2c2b3ad19e388942c4fe47b92a89dd49c468e09ce9d8bc631934
ARG JAVA_HOME=C:/openjdk-${JAVA_VERSION}
ARG POWERSHELL_VERSION=6.2.1
ARG POWERSHELL_SHA256=6bcc0f80ca549a8adb317b2ec1294f103c4bf75cc29efa8ac03a27f9a860b1f4
ARG POWERSHELL_HOME=C:/PowerShell

FROM mcr.microsoft.com/windows/servercore:$WINDOWS_DOCKER_TAG as builder
MAINTAINER Alex Earl <slide.o.mix@gmail.com>

ARG JAVA_VERSION
ARG JAVA_ZIP_VERSION
ARG JAVA_SHA256
ARG JAVA_HOME
ARG JAVA_BASE_VERSION
ARG POWERSHELL_VERSION
ARG POWERSHELL_SHA256
ARG POWERSHELL_HOME

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; `
    $javaRoot = 'java-{0}-openjdk-{1}.ojdkbuild.windows.x86_64' -f $env:JAVA_BASE_VERSION, $env:JAVA_ZIP_VERSION ; `
    if($env:JAVA_VERSION -ne '1.8.0') { $javaRoot = 'java-{0}-openjdk-{1}.windows.ojdkbuild.x86_64' -f $env:JAVA_BASE_VERSION, $env:JAVA_ZIP_VERSION } ; `
    Invoke-WebRequest $('https://github.com/ojdkbuild/ojdkbuild/releases/download/{0}/{1}.zip' -f $env:JAVA_VERSION, $javaRoot) -OutFile 'openjdk.zip' -UseBasicParsing ; `
    if ((Get-FileHash openjdk.zip -Algorithm sha256).Hash -ne $env:JAVA_SHA256) { Write-Error 'Java SHA256 mismatch' ; exit 1} ; `
    Expand-Archive openjdk.zip -DestinationPath C:/ ; `
    Move-Item -Path $('C:/{0}' -f $javaRoot) -Destination $('C:/openjdk-{0}' -f $env:JAVA_VERSION) ; `
    Remove-Item -Path openjdk.zip ; `
    Invoke-WebRequest $('https://github.com/PowerShell/PowerShell/releases/download/v{0}/PowerShell-{0}-win-x64.zip' -f $env:POWERSHELL_VERSION) -OutFile 'powershellCore.zip' -UseBasicParsing; `
	If ((Get-FileHash powershellCore.zip -Algorithm sha256).Hash -ne $env:POWERSHELL_SHA256) { Write-Error 'Powershell SHA256 mismatch'; exit 1 } ; `	
	Expand-Archive powershellCore.zip -DestinationPath $env:POWERSHELL_HOME ; `
    Remove-Item -Path powershellCore.zip

FROM mcr.microsoft.com/windows/nanoserver:$WINDOWS_DOCKER_TAG

ARG JAVA_HOME
ARG POWERSHELL_HOME

USER ContainerAdministrator
RUN setx /M PATH "%PATH%;%POWERSHELL_HOME%;%JAVA_HOME%\bin"
USER ContainerUser

SHELL ["pwsh", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

COPY --from=builder ["$JAVA_HOME", "$JAVA_HOME"]
COPY --from=builder ["$POWERSHELL_HOME", "$POWERSHELL_HOME"]

ARG VERSION=3.29

ARG AGENT_FILENAME=agent.jar
ARG AGENT_HASH_FILENAME=$AGENT_FILENAME.sha1

LABEL Description="This is a base image, which provides the Jenkins agent executable (agent.jar)" Vendor="Jenkins project" Version="${VERSION}"

ARG AGENT_ROOT=C:/Jenkins
ARG AGENT_WORKDIR=${AGENT_ROOT}/Agent

ENV AGENT_WORKDIR=${AGENT_WORKDIR}
RUN mkdir -p C:/ProgramData/Jenkins | Out-Null ; `
    mkdir (Join-Path $env:AGENT_ROOT .jenkins) | Out-Null ; `
    mkdir -p $($env:AGENT_WORKDIR) | Out-Null

# Get the Agent from the Jenkins Artifacts Repository
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; `
    Invoke-WebRequest $('https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/{0}/remoting-{0}.jar' -f $env:VERSION) -OutFile $(Join-Path C:/ProgramData/Jenkins $env:AGENT_FILENAME) -UseBasicParsing ;`
    Invoke-WebRequest $('https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/{0}/remoting-{0}.jar.sha1' -f $env:VERSION) -OutFile (Join-Path C:/ProgramData/Jenkins $env:AGENT_HASH_FILENAME) -UseBasicParsing ;`
    if ((Get-FileHash (Join-Path C:/ProgramData/Jenkins $env:AGENT_FILENAME) -Algorithm SHA1).Hash -ne (Get-Content (Join-Path C:/ProgramData/Jenkins $env:AGENT_HASH_FILENAME))) {exit 1}

VOLUME ${AGENT_ROOT}/.jenkins
VOLUME ${AGENT_WORKDIR}
WORKDIR ${AGENT_ROOT}
